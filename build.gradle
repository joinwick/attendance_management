buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        mavenCentral()
    }

    ext {
        springBootVersion = '2.4.2'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

allprojects {
    group 'com.lida'
    version '1.0.0'
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }
    tasks.withType(Test) {
        systemProperty "file.encoding", "UTF-8"
    }

    repositories {
        mavenLocal()
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        mavenCentral()
    }

    ext {
        springBootVersion = '2.4.2'
        slf4jVersion = '1.7.30'
        log4j2Version = '2.13.3'
        commonsVesion = '3.0'
        guavaVersion = '23.0'
        mysqlVersion = '8.0.16'
        mybatisVersion = '3.5.6'
        junitVersion = '4.12'
        disruptorVersion = '3.4.2'
        mockitoVersion = '3.8.0'

    }

    dependencies {
        implementation("org.slf4j:slf4j-api:$slf4jVersion")
        implementation("org.apache.logging.log4j:log4j-core:$log4j2Version")
        implementation("org.apache.logging.log4j:log4j-api:$log4j2Version")
        implementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version")
        implementation("com.google.guava:guava:$guavaVersion")
        implementation("mysql:mysql-connector-java:$mysqlVersion")
        implementation("org.mybatis:mybatis:$mybatisVersion")
        implementation("com.lmax:disruptor:$disruptorVersion")
        implementation("org.mockito:mockito-core:$mockitoVersion")
        implementation("org.springframework.boot.experimental:spring-boot-starter-data-r2dbc:$springBootVersion")


        implementation("org.springframework.boot:spring-boot-starter:$springBootVersion")
                {
                    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
                }
        implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
                {
                    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
                }
        implementation("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion")
                {
                    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
                }
        testImplementation("junit:junit:$junitVersion")
    }
}