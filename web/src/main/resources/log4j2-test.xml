<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<Configuration status="DEBUG" monitorInterval="30">
    <properties>
        <!--设置容器日志在硬盘上输出的目录-->
        <property name="logPath">/logs/</property>
        <!--设置项目日志在硬盘上输出的目录-->
        <property name="logPathForProject">/logs/vision/</property>
    </properties>

    <Appenders>
        <!--console: 控制台输出的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--设置输出格式-->
            <PatternLayout charset="UTF-8" pattern="[%-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n" />
            <!--设置过滤器等级为DEBUG-->
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
        </Console>

        <!--File: 同步输出日志到本地文件-->
        <File name="fileLog" fileName="${logPath}/file.log" filepattern="${logPath}/%d{YYYY-MM-dd}-%i-file.log.zip">
            <PatternLayout charset="UTF-8" pattern="[%-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n"/>
        </File>

        <!--设置级别为DEBUG日志输出到debug.log中-->
        <RollingFile name="debugLog" filename="${logPath}/debug.log" filepattern="${logPath}/%d{YYYY-MM-dd}-%i-debug.log.zip">
            <Filters>
                <!--设置只输出级别为DEBUG的日志-->
                <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout charset="UTF-8" pattern="[ %-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingFile>

        <!--设置级别为INFO日志输出到info.log中,filename为输出日志的目录,filepattern 为压缩文件的命名规范与目录 -->
        <RollingFile name="infoLog" filename="${logPath}/info.log" filepattern="${logPath}/%d{YYYY-MM-dd}-%i-info.log.zip">
            <!--设置日志级别-->
            <Filters>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!--输出日志的格式-->
            <PatternLayout charset="UTF-8" pattern="[ %-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n" />
            <Policies>
                <!--设置每天打包日志一次-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志文件满50MB后打包-->
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
            <!--设置最多保存20个日志文件，默认为7个-->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>

        <!--设置级别为WARN日志输出到warn.log中-->
        <RollingFile name="warnLog" filename="${logPath}/warn.log" filepattern="${logPath}/%d{YYYY-MM-dd}-%i-warn.log.zip">
            <Filters>
                <!--设置只输出级别为WARN的日志, 级别在warn之上则接受,onMismatch="DENY" :级别在warn之下则拒绝-->
                <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout charset="UTF-8" pattern="[ %-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingFile>

        <!--设置级别为ERROR日志输出到error.log中-->
        <RollingFile name="errorLog" filename="${logPath}/error.log" filepattern="${logPath}/%d{YYYY-MM-dd}-%i-error.log.zip">
            <!--设置只输出级别为ERROR的日志-->
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout charset="UTF-8" pattern="[ %-5p]:%d{YYYY-MM-dd HH:mm:ss} [%t] %c{1}:%L - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
    </Appenders>

    <Loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <!--Logger节点用来单独指定日志的形式，name为包路径,比如要为org.springframework包下所有日志指定为INFO级别等-->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.mybatis" level="INFO"/>
        <!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
        <root level="trace">
            <appender-ref ref = "Console"/>
            <appender-ref ref = "debugLog" />
            <appender-ref ref = "infoLog" />
            <appender-ref ref = "warnLog" />
            <appender-ref ref = "errorLog" />
        </root>
        <!--AsyncLogger :异步日志,LOG4J有三种日志模式,全异步日志,混合模式,同步日志,性能从高到底,线程越多效率越高,也可以避免日志卡死线程情况发生-->
        <!--additivity="false" : additivity设置事件是否在root logger输出，为了避免重复输出，可以在Logger 标签下设置additivity为”false”-->
        <AsyncLogger name="AsyncLogger" level="trace" includeLocation="true" additivity="false">
            <appender-ref ref="errorLog"/>
        </AsyncLogger>
    </Loggers>
</Configuration>